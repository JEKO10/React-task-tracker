{"version":3,"sources":["components/Button.js","components/Header.js","components/AddTask.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","isAddOpen","setIsAddOpen","style","backgroundColor","className","onClick","Header","AddTask","addTask","useState","setText","day","setDay","reminder","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","maxLength","id","checked","currentTarget","Task","task","deleteTask","reminderToggle","onDoubleClick","cursor","Tasks","tasks","map","App","setTasks","Math","floor","random","newTask","length","newTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd4ad8f6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Button({ color, text, isAddOpen, setIsAddOpen }) {\r\n  return (\r\n    <button\r\n      style={{ backgroundColor: color }}\r\n      className=\"btn\"\r\n      onClick={() => {\r\n        setIsAddOpen(!isAddOpen);\r\n      }}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nfunction Header({ isAddOpen, setIsAddOpen }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Task Tracker</h1>\r\n      <Button\r\n        color={isAddOpen ? \"red\" : \"green\"}\r\n        text={isAddOpen ? \"Close\" : \"Add\"}\r\n        setIsAddOpen={setIsAddOpen}\r\n        isAddOpen={isAddOpen}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction AddTask({ addTask }) {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please Add Task\");\r\n      return;\r\n    }\r\n\r\n    addTask({ text, day, reminder });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"add\">\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <label>Task</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add task\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Day and Time</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add Day and Time\"\r\n            value={day}\r\n            maxLength=\"47\"\r\n            onChange={(e) => setDay(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Reminder*</label>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"checkbox\"\r\n            checked={reminder}\r\n            value={reminder}\r\n            onChange={(e) => setReminder(e.currentTarget.checked)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" value=\"Save Task\" />\r\n        <p>* double tap on task</p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nfunction Task({ task, deleteTask, reminderToggle }) {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => {\r\n        reminderToggle(task.id);\r\n      }}\r\n    >\r\n      <div>\r\n        <h3>{task.text}</h3>\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            deleteTask(task.id);\r\n          }}\r\n        />\r\n      </div>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nfunction Tasks({ tasks, deleteTask, reminderToggle }) {\r\n  return (\r\n    <div>\r\n      {tasks.map((task) => {\r\n        return (\r\n          <Task\r\n            key={task.id}\r\n            task={task}\r\n            deleteTask={deleteTask}\r\n            reminderToggle={reminderToggle}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport AddTask from \"./components/AddTask\";\nimport Tasks from \"./components/Tasks\";\n// favicon\n// title\nfunction App() {\n  const [isAddOpen, setIsAddOpen] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 0,\n      text: \"Dentist Appointment\",\n      day: \"Jan 5th at 4:20PM\",\n      reminder: true,\n    },\n    {\n      id: 1,\n      text: \"Festival at school\",\n      day: \"Feb 9th at 2:40PM\",\n      reminder: false,\n    },\n    {\n      id: 2,\n      text: \"Shopping\",\n      day: \"Feb 15th at 3:00PM\",\n      reminder: false,\n    },\n    {\n      id: 3,\n      text: \"Final Exam\",\n      day: \"May 10th at 8:30AM\",\n      reminder: true,\n    },\n  ]);\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n  };\n\n  const deleteTask = (id) => {\n    const newTasks = tasks.filter((task) => task.id !== id);\n    setTasks(newTasks);\n  };\n\n  const reminderToggle = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"main\">\n      <Header isAddOpen={isAddOpen} setIsAddOpen={setIsAddOpen} />\n      {isAddOpen ? <AddTask addTask={addTask} /> : \"\"}\n      {tasks.length > 0 ? (\n        <Tasks\n          tasks={tasks}\n          deleteTask={deleteTask}\n          reminderToggle={reminderToggle}\n        />\n      ) : (\n        \"There is no more tasks!\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}